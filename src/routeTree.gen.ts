/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as R505Import } from './routes/505'
import { Route as DashboardRouteImport } from './routes/dashboard/route'
import { Route as IndexImport } from './routes/index'
import { Route as DashboardIndexImport } from './routes/dashboard/index'
import { Route as DashboardSettingsImport } from './routes/dashboard/settings'
import { Route as DashboardProjectSetttingsImport } from './routes/dashboard/project-setttings'
import { Route as DashboardKnowledgebaseImport } from './routes/dashboard/knowledge_base'
import { Route as DashboardHistoryImport } from './routes/dashboard/history'
import { Route as DashboardAnalyticsImport } from './routes/dashboard/analytics'
import { Route as Dashboard505Import } from './routes/dashboard/505'
import { Route as Dashboard404Import } from './routes/dashboard/404'
import { Route as authSignInImport } from './routes/(auth)/sign-in'
import { Route as authRegisterImport } from './routes/(auth)/register'
import { Route as DashboardClientsRouteImport } from './routes/dashboard/clients/route'
import { Route as DashboardAgentsRouteImport } from './routes/dashboard/agents/route'
import { Route as DashboardPhoneIndexImport } from './routes/dashboard/phone/index'
import { Route as DashboardClientsIndexImport } from './routes/dashboard/clients/index'
import { Route as DashboardAgentsIndexImport } from './routes/dashboard/agents/index'
import { Route as DashboardAgents505Import } from './routes/dashboard/agents/505'
import { Route as DashboardAgents404Import } from './routes/dashboard/agents/404'
import { Route as DashboardAgentsAgentidImport } from './routes/dashboard/agents/$agent_id'

// Create/Update Routes

const R505Route = R505Import.update({
  id: '/505',
  path: '/505',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRouteRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardSettingsRoute = DashboardSettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardProjectSetttingsRoute = DashboardProjectSetttingsImport.update({
  id: '/project-setttings',
  path: '/project-setttings',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardKnowledgebaseRoute = DashboardKnowledgebaseImport.update({
  id: '/knowledge_base',
  path: '/knowledge_base',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardHistoryRoute = DashboardHistoryImport.update({
  id: '/history',
  path: '/history',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardAnalyticsRoute = DashboardAnalyticsImport.update({
  id: '/analytics',
  path: '/analytics',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const Dashboard505Route = Dashboard505Import.update({
  id: '/505',
  path: '/505',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const Dashboard404Route = Dashboard404Import.update({
  id: '/404',
  path: '/404',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const authSignInRoute = authSignInImport.update({
  id: '/(auth)/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const authRegisterRoute = authRegisterImport.update({
  id: '/(auth)/register',
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const DashboardClientsRouteRoute = DashboardClientsRouteImport.update({
  id: '/clients',
  path: '/clients',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardAgentsRouteRoute = DashboardAgentsRouteImport.update({
  id: '/agents',
  path: '/agents',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardPhoneIndexRoute = DashboardPhoneIndexImport.update({
  id: '/phone/',
  path: '/phone/',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardClientsIndexRoute = DashboardClientsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardClientsRouteRoute,
} as any)

const DashboardAgentsIndexRoute = DashboardAgentsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardAgentsRouteRoute,
} as any)

const DashboardAgents505Route = DashboardAgents505Import.update({
  id: '/505',
  path: '/505',
  getParentRoute: () => DashboardAgentsRouteRoute,
} as any)

const DashboardAgents404Route = DashboardAgents404Import.update({
  id: '/404',
  path: '/404',
  getParentRoute: () => DashboardAgentsRouteRoute,
} as any)

const DashboardAgentsAgentidRoute = DashboardAgentsAgentidImport.update({
  id: '/$agent_id',
  path: '/$agent_id',
  getParentRoute: () => DashboardAgentsRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRoute
    }
    '/505': {
      id: '/505'
      path: '/505'
      fullPath: '/505'
      preLoaderRoute: typeof R505Import
      parentRoute: typeof rootRoute
    }
    '/dashboard/agents': {
      id: '/dashboard/agents'
      path: '/agents'
      fullPath: '/dashboard/agents'
      preLoaderRoute: typeof DashboardAgentsRouteImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/clients': {
      id: '/dashboard/clients'
      path: '/clients'
      fullPath: '/dashboard/clients'
      preLoaderRoute: typeof DashboardClientsRouteImport
      parentRoute: typeof DashboardRouteImport
    }
    '/(auth)/register': {
      id: '/(auth)/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof authRegisterImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-in': {
      id: '/(auth)/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof authSignInImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/404': {
      id: '/dashboard/404'
      path: '/404'
      fullPath: '/dashboard/404'
      preLoaderRoute: typeof Dashboard404Import
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/505': {
      id: '/dashboard/505'
      path: '/505'
      fullPath: '/dashboard/505'
      preLoaderRoute: typeof Dashboard505Import
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/analytics': {
      id: '/dashboard/analytics'
      path: '/analytics'
      fullPath: '/dashboard/analytics'
      preLoaderRoute: typeof DashboardAnalyticsImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/history': {
      id: '/dashboard/history'
      path: '/history'
      fullPath: '/dashboard/history'
      preLoaderRoute: typeof DashboardHistoryImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/knowledge_base': {
      id: '/dashboard/knowledge_base'
      path: '/knowledge_base'
      fullPath: '/dashboard/knowledge_base'
      preLoaderRoute: typeof DashboardKnowledgebaseImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/project-setttings': {
      id: '/dashboard/project-setttings'
      path: '/project-setttings'
      fullPath: '/dashboard/project-setttings'
      preLoaderRoute: typeof DashboardProjectSetttingsImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/settings': {
      id: '/dashboard/settings'
      path: '/settings'
      fullPath: '/dashboard/settings'
      preLoaderRoute: typeof DashboardSettingsImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/agents/$agent_id': {
      id: '/dashboard/agents/$agent_id'
      path: '/$agent_id'
      fullPath: '/dashboard/agents/$agent_id'
      preLoaderRoute: typeof DashboardAgentsAgentidImport
      parentRoute: typeof DashboardAgentsRouteImport
    }
    '/dashboard/agents/404': {
      id: '/dashboard/agents/404'
      path: '/404'
      fullPath: '/dashboard/agents/404'
      preLoaderRoute: typeof DashboardAgents404Import
      parentRoute: typeof DashboardAgentsRouteImport
    }
    '/dashboard/agents/505': {
      id: '/dashboard/agents/505'
      path: '/505'
      fullPath: '/dashboard/agents/505'
      preLoaderRoute: typeof DashboardAgents505Import
      parentRoute: typeof DashboardAgentsRouteImport
    }
    '/dashboard/agents/': {
      id: '/dashboard/agents/'
      path: '/'
      fullPath: '/dashboard/agents/'
      preLoaderRoute: typeof DashboardAgentsIndexImport
      parentRoute: typeof DashboardAgentsRouteImport
    }
    '/dashboard/clients/': {
      id: '/dashboard/clients/'
      path: '/'
      fullPath: '/dashboard/clients/'
      preLoaderRoute: typeof DashboardClientsIndexImport
      parentRoute: typeof DashboardClientsRouteImport
    }
    '/dashboard/phone/': {
      id: '/dashboard/phone/'
      path: '/phone'
      fullPath: '/dashboard/phone'
      preLoaderRoute: typeof DashboardPhoneIndexImport
      parentRoute: typeof DashboardRouteImport
    }
  }
}

// Create and export the route tree

interface DashboardAgentsRouteRouteChildren {
  DashboardAgentsAgentidRoute: typeof DashboardAgentsAgentidRoute
  DashboardAgents404Route: typeof DashboardAgents404Route
  DashboardAgents505Route: typeof DashboardAgents505Route
  DashboardAgentsIndexRoute: typeof DashboardAgentsIndexRoute
}

const DashboardAgentsRouteRouteChildren: DashboardAgentsRouteRouteChildren = {
  DashboardAgentsAgentidRoute: DashboardAgentsAgentidRoute,
  DashboardAgents404Route: DashboardAgents404Route,
  DashboardAgents505Route: DashboardAgents505Route,
  DashboardAgentsIndexRoute: DashboardAgentsIndexRoute,
}

const DashboardAgentsRouteRouteWithChildren =
  DashboardAgentsRouteRoute._addFileChildren(DashboardAgentsRouteRouteChildren)

interface DashboardClientsRouteRouteChildren {
  DashboardClientsIndexRoute: typeof DashboardClientsIndexRoute
}

const DashboardClientsRouteRouteChildren: DashboardClientsRouteRouteChildren = {
  DashboardClientsIndexRoute: DashboardClientsIndexRoute,
}

const DashboardClientsRouteRouteWithChildren =
  DashboardClientsRouteRoute._addFileChildren(
    DashboardClientsRouteRouteChildren,
  )

interface DashboardRouteRouteChildren {
  DashboardAgentsRouteRoute: typeof DashboardAgentsRouteRouteWithChildren
  DashboardClientsRouteRoute: typeof DashboardClientsRouteRouteWithChildren
  Dashboard404Route: typeof Dashboard404Route
  Dashboard505Route: typeof Dashboard505Route
  DashboardAnalyticsRoute: typeof DashboardAnalyticsRoute
  DashboardHistoryRoute: typeof DashboardHistoryRoute
  DashboardKnowledgebaseRoute: typeof DashboardKnowledgebaseRoute
  DashboardProjectSetttingsRoute: typeof DashboardProjectSetttingsRoute
  DashboardSettingsRoute: typeof DashboardSettingsRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
  DashboardPhoneIndexRoute: typeof DashboardPhoneIndexRoute
}

const DashboardRouteRouteChildren: DashboardRouteRouteChildren = {
  DashboardAgentsRouteRoute: DashboardAgentsRouteRouteWithChildren,
  DashboardClientsRouteRoute: DashboardClientsRouteRouteWithChildren,
  Dashboard404Route: Dashboard404Route,
  Dashboard505Route: Dashboard505Route,
  DashboardAnalyticsRoute: DashboardAnalyticsRoute,
  DashboardHistoryRoute: DashboardHistoryRoute,
  DashboardKnowledgebaseRoute: DashboardKnowledgebaseRoute,
  DashboardProjectSetttingsRoute: DashboardProjectSetttingsRoute,
  DashboardSettingsRoute: DashboardSettingsRoute,
  DashboardIndexRoute: DashboardIndexRoute,
  DashboardPhoneIndexRoute: DashboardPhoneIndexRoute,
}

const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(
  DashboardRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/505': typeof R505Route
  '/dashboard/agents': typeof DashboardAgentsRouteRouteWithChildren
  '/dashboard/clients': typeof DashboardClientsRouteRouteWithChildren
  '/register': typeof authRegisterRoute
  '/sign-in': typeof authSignInRoute
  '/dashboard/404': typeof Dashboard404Route
  '/dashboard/505': typeof Dashboard505Route
  '/dashboard/analytics': typeof DashboardAnalyticsRoute
  '/dashboard/history': typeof DashboardHistoryRoute
  '/dashboard/knowledge_base': typeof DashboardKnowledgebaseRoute
  '/dashboard/project-setttings': typeof DashboardProjectSetttingsRoute
  '/dashboard/settings': typeof DashboardSettingsRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/agents/$agent_id': typeof DashboardAgentsAgentidRoute
  '/dashboard/agents/404': typeof DashboardAgents404Route
  '/dashboard/agents/505': typeof DashboardAgents505Route
  '/dashboard/agents/': typeof DashboardAgentsIndexRoute
  '/dashboard/clients/': typeof DashboardClientsIndexRoute
  '/dashboard/phone': typeof DashboardPhoneIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/505': typeof R505Route
  '/register': typeof authRegisterRoute
  '/sign-in': typeof authSignInRoute
  '/dashboard/404': typeof Dashboard404Route
  '/dashboard/505': typeof Dashboard505Route
  '/dashboard/analytics': typeof DashboardAnalyticsRoute
  '/dashboard/history': typeof DashboardHistoryRoute
  '/dashboard/knowledge_base': typeof DashboardKnowledgebaseRoute
  '/dashboard/project-setttings': typeof DashboardProjectSetttingsRoute
  '/dashboard/settings': typeof DashboardSettingsRoute
  '/dashboard': typeof DashboardIndexRoute
  '/dashboard/agents/$agent_id': typeof DashboardAgentsAgentidRoute
  '/dashboard/agents/404': typeof DashboardAgents404Route
  '/dashboard/agents/505': typeof DashboardAgents505Route
  '/dashboard/agents': typeof DashboardAgentsIndexRoute
  '/dashboard/clients': typeof DashboardClientsIndexRoute
  '/dashboard/phone': typeof DashboardPhoneIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/505': typeof R505Route
  '/dashboard/agents': typeof DashboardAgentsRouteRouteWithChildren
  '/dashboard/clients': typeof DashboardClientsRouteRouteWithChildren
  '/(auth)/register': typeof authRegisterRoute
  '/(auth)/sign-in': typeof authSignInRoute
  '/dashboard/404': typeof Dashboard404Route
  '/dashboard/505': typeof Dashboard505Route
  '/dashboard/analytics': typeof DashboardAnalyticsRoute
  '/dashboard/history': typeof DashboardHistoryRoute
  '/dashboard/knowledge_base': typeof DashboardKnowledgebaseRoute
  '/dashboard/project-setttings': typeof DashboardProjectSetttingsRoute
  '/dashboard/settings': typeof DashboardSettingsRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/agents/$agent_id': typeof DashboardAgentsAgentidRoute
  '/dashboard/agents/404': typeof DashboardAgents404Route
  '/dashboard/agents/505': typeof DashboardAgents505Route
  '/dashboard/agents/': typeof DashboardAgentsIndexRoute
  '/dashboard/clients/': typeof DashboardClientsIndexRoute
  '/dashboard/phone/': typeof DashboardPhoneIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/505'
    | '/dashboard/agents'
    | '/dashboard/clients'
    | '/register'
    | '/sign-in'
    | '/dashboard/404'
    | '/dashboard/505'
    | '/dashboard/analytics'
    | '/dashboard/history'
    | '/dashboard/knowledge_base'
    | '/dashboard/project-setttings'
    | '/dashboard/settings'
    | '/dashboard/'
    | '/dashboard/agents/$agent_id'
    | '/dashboard/agents/404'
    | '/dashboard/agents/505'
    | '/dashboard/agents/'
    | '/dashboard/clients/'
    | '/dashboard/phone'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/505'
    | '/register'
    | '/sign-in'
    | '/dashboard/404'
    | '/dashboard/505'
    | '/dashboard/analytics'
    | '/dashboard/history'
    | '/dashboard/knowledge_base'
    | '/dashboard/project-setttings'
    | '/dashboard/settings'
    | '/dashboard'
    | '/dashboard/agents/$agent_id'
    | '/dashboard/agents/404'
    | '/dashboard/agents/505'
    | '/dashboard/agents'
    | '/dashboard/clients'
    | '/dashboard/phone'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/505'
    | '/dashboard/agents'
    | '/dashboard/clients'
    | '/(auth)/register'
    | '/(auth)/sign-in'
    | '/dashboard/404'
    | '/dashboard/505'
    | '/dashboard/analytics'
    | '/dashboard/history'
    | '/dashboard/knowledge_base'
    | '/dashboard/project-setttings'
    | '/dashboard/settings'
    | '/dashboard/'
    | '/dashboard/agents/$agent_id'
    | '/dashboard/agents/404'
    | '/dashboard/agents/505'
    | '/dashboard/agents/'
    | '/dashboard/clients/'
    | '/dashboard/phone/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRouteRoute: typeof DashboardRouteRouteWithChildren
  R505Route: typeof R505Route
  authRegisterRoute: typeof authRegisterRoute
  authSignInRoute: typeof authSignInRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRouteRoute: DashboardRouteRouteWithChildren,
  R505Route: R505Route,
  authRegisterRoute: authRegisterRoute,
  authSignInRoute: authSignInRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/dashboard",
        "/505",
        "/(auth)/register",
        "/(auth)/sign-in"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard/route.tsx",
      "children": [
        "/dashboard/agents",
        "/dashboard/clients",
        "/dashboard/404",
        "/dashboard/505",
        "/dashboard/analytics",
        "/dashboard/history",
        "/dashboard/knowledge_base",
        "/dashboard/project-setttings",
        "/dashboard/settings",
        "/dashboard/",
        "/dashboard/phone/"
      ]
    },
    "/505": {
      "filePath": "505.tsx"
    },
    "/dashboard/agents": {
      "filePath": "dashboard/agents/route.tsx",
      "parent": "/dashboard",
      "children": [
        "/dashboard/agents/$agent_id",
        "/dashboard/agents/404",
        "/dashboard/agents/505",
        "/dashboard/agents/"
      ]
    },
    "/dashboard/clients": {
      "filePath": "dashboard/clients/route.tsx",
      "parent": "/dashboard",
      "children": [
        "/dashboard/clients/"
      ]
    },
    "/(auth)/register": {
      "filePath": "(auth)/register.tsx"
    },
    "/(auth)/sign-in": {
      "filePath": "(auth)/sign-in.tsx"
    },
    "/dashboard/404": {
      "filePath": "dashboard/404.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/505": {
      "filePath": "dashboard/505.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/analytics": {
      "filePath": "dashboard/analytics.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/history": {
      "filePath": "dashboard/history.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/knowledge_base": {
      "filePath": "dashboard/knowledge_base.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/project-setttings": {
      "filePath": "dashboard/project-setttings.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/settings": {
      "filePath": "dashboard/settings.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/": {
      "filePath": "dashboard/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/agents/$agent_id": {
      "filePath": "dashboard/agents/$agent_id.tsx",
      "parent": "/dashboard/agents"
    },
    "/dashboard/agents/404": {
      "filePath": "dashboard/agents/404.tsx",
      "parent": "/dashboard/agents"
    },
    "/dashboard/agents/505": {
      "filePath": "dashboard/agents/505.tsx",
      "parent": "/dashboard/agents"
    },
    "/dashboard/agents/": {
      "filePath": "dashboard/agents/index.tsx",
      "parent": "/dashboard/agents"
    },
    "/dashboard/clients/": {
      "filePath": "dashboard/clients/index.tsx",
      "parent": "/dashboard/clients"
    },
    "/dashboard/phone/": {
      "filePath": "dashboard/phone/index.tsx",
      "parent": "/dashboard"
    }
  }
}
ROUTE_MANIFEST_END */
